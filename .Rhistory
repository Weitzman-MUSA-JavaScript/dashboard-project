labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
mapTheme(title_size = 14)
rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(viol_sex, 2000), size = .01, colour = "white") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE, direction = -1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(viol_sex, 2000), size = .01, colour = "white") +
facet_wrap(~label, ) +
scale_fill_viridis(option='A',discrete = TRUE, direction = 1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(viol_sex, 2000), size = .01, colour = "blue") +
facet_wrap(~label, ) +
scale_fill_viridis(option='A',discrete = TRUE, direction = 1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_viridis(option='A',discrete = TRUE, direction = 1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_manual(values = flatblues5) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
comp_map
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_manual(values = -flatbrowns5) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_manual(values = -flatoranges5) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_manual(values = flatoranges5) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
comp_map
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_viridis(option='A',discrete = TRUE, direction = 1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
map2023 <- ggplot()+
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5')+labs(title="Actual Cases in 2023")+
theme_void()
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5')+labs(title="Actual Cases in 2023")+
theme_void()
grid.arrange(comp_map,map2023, )
grid.arrange(comp_map,map2023, ncol=2 )
grid.arrange(comp_map,map2023, ncol=1 )
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5', size=0.01)+labs(title="Actual Cases in 2023")+
theme_void()
grid.arrange(comp_map,map2023, ncol=1 )
map2023 <- ggplot()+
geom_sf(sample(viol23,3000), mapping=aes(), color='grey5', size=0.01)+labs(title="Actual Cases in 2023")+
theme_void()
map2023 <- ggplot()+
geom_sf(sample(viol23,30), mapping=aes(), color='grey5', size=0.01)+labs(title="Actual Cases in 2023")+
theme_void()
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5', size=0.01)+labs(title="Actual Cases in 2023")+
theme_void()
grid.arrange(comp_map,map2023, ncol=1 )
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='darkred', size=0.01)+labs(title="Actual Cases in 2023")+
theme_void()
grid.arrange(comp_map,map2023, ncol=1 )
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_viridis(option='A',discrete = TRUE, direction = 1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5', size=0.01)+labs(title="Actual Cases in 2023")+
theme_void()
grid.arrange(comp_map,map2023, ncol=1 )
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_viridis(option='A',discrete = TRUE, direction = 1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5', size=0.01)+labs(title="Actual Cases in 2023")+
theme_void()
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1),
c(1,1),
c(2,2)
)
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1),
c(1,1),
c(2,2)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,1),
c(1,1,1),
c(1,2,2)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,1),
c(1,1,1),
c(NA,2,2)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,NA),
c(1,1,2),
c(1,1,2)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,2),
c(1,1,2),
c(1,1,2)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,2,2),
c(1,1,2,2),
c(1,1,2,2)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,2,2),
c(1,1,2,2),
c(1,1,NA,NA)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,1,2,2),
c(1,1,1,2,2),
c(1,1,1,NA,NA)))
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5', size=0.01)+labs(subtitle="Actual Cases in 2023")+
theme_void()
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,1,2,2),
c(1,1,1,2,2),
c(1,1,1,NA,NA)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,1,2,2),
))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,1,2,2
)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1,1,2
)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1),
c(1),
c(2
)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1),
c(1),
c(2
)))
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_viridis(option='A',discrete = TRUE, direction = 1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions; 2013 violent crime reports")+
theme_void()+
theme(legend.position = 'bottom')
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5', size=0.01)+labs(subtitle="Actual Cases in 2023")+
theme_void()
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1),
c(1),
c(2
)))
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5', size=0.01)+labs(subtitle="Actual Reports in 2023")+
theme_void()
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1),
c(1),
c(2
)))
grid.arrange(comp_map,map2023,
layout_matrix = cbind(c(1),
c(1),
c(2
)))
comp_map <- rbind(viol_KDE_sf, viol_risk_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
facet_wrap(~label, ) +
scale_fill_viridis(option='A',discrete = TRUE, direction = 1) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2021 violence risk predictions")+
theme_void()+
theme(legend.position = 'bottom')
map2023 <- ggplot()+
geom_sf(viol23, mapping=aes(), color='grey5', size=0.01)+labs(subtitle="Actual Reports in 2023")+
theme_void()
rbind(viol_KDE_sf, viol_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countviollaries = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countviollaries / sum(countviollaries)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2018 viols",
y = "% of 2023 Violent Crime Reports(per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
rbind(viol_KDE_sf, viol_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countviollaries = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countviollaries / sum(countviollaries)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_manual(c('grey30','grey90'), name='Model') +
labs(title = "Risk prediction vs. Kernel density, 2018 viols",
y = "% of 2023 Violent Crime Reports(per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
rbind(viol_KDE_sf, viol_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countviollaries = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countviollaries / sum(countviollaries)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_manual(values=c('grey30','grey90'), name='Model') +
labs(title = "Risk prediction vs. Kernel density, 2018 viols",
y = "% of 2023 Violent Crime Reports(per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
rbind(viol_KDE_sf, viol_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countviollaries = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countviollaries / sum(countviollaries)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_manual(values=c('grey30','grey90'), name='Model') +
labs(title = "Risk prediction vs. Kernel density, 2018 viols",
y = "% of 2023 Violent Crime Reports(per model)",
x = "Risk Category") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
rbind(viol_KDE_sf, viol_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countviollaries = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countviollaries / sum(countviollaries)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_manual(values=c('grey30','grey90'), name='Model') +
labs(title = "Risk prediction vs. Kernel density, 2018 viols",
y = "% of 2023 Violent Crime Reports(per model)",
x = "Risk Category") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0))
rbind(viol_KDE_sf, viol_risk_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countviollaries = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countviollaries / sum(countviollaries)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_manual(values=c('grey30','grey90'), name='Model') +
labs(title = "Risk prediction vs. Kernel density, 2018 viols",
y = "% of 2023 Violent Crime Reports(per model)",
x = "Risk Category") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.9))
reg.summary %>%
filter(str_detect(Regression, "LOGO")) %>%
st_centroid() %>%
st_join(ethnic) %>%
na.omit() %>%
st_drop_geometry() %>%
group_by(Regression, Majority) %>%
summarize(mean.Error = mean(Error, na.rm = T)) %>%
spread(Majority, mean.Error) %>%
kable(caption = "Mean Error by neighborhood racial context") %>%
kable_styling("striped", full_width = F)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE)
# Load Libraries
library(spdep)
library(ckanr)
library(FNN)
library(grid)
library(gridExtra)
library(ggcorrplot) # plot correlation plot
library(corrr)      # another way to plot correlation plot
library(kableExtra)
library(jtools)     # for regression model plots
library(ggstance)   # to support jtools plots
library(ggpubr)     # plotting R^2 value on ggplot point scatter
library(broom.mixed)
library(dplyr)
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
library(gridExtra)
library(mice)
library(rcompanion)
library(caret)
library(extrafont)
library(scales)
library(forcats)
library(classInt)
library(stargazer)
library(pander)
library(spatstat.explore)
library(raster)
library(classInt)
library(RSocrata)
options(scipen = 999)
options(tigris_class = "sf")
library(dplyr)
library(tmap)
library(viridis)
q5 <- function(variable) {as.factor(ntile(variable, 5))}
qBr <- function(df, variable, rnd) {
if (missing(rnd)) {
as.character(quantile(round(df[[variable]],2),
c(.01,.2,.4,.6,.8), na.rm=T))
} else if (rnd == FALSE | rnd == F) {
as.character(formatC(quantile(df[[variable]],
c(.01,.2,.4,.6,.8), na.rm=T),
digits = 4))
}
}
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
flatreds5 <- c('#f9ebea','#e6b0aa','#cd6155', '#cd6155','#7b241c')
flatblues5 <- c('#ebf5fb', '#a9cce3', '#5499c7', '#2471a3',  '#1a5276')
flatsage5 <- c('#f6fff8','#eaf4f4', '#cce3de','#a4c3b2','#6b9080')
flatoranges5 <- c('#ffdebf', '#ffdebf', '#ffbc80', '#d9884a', '#b35500')
load("./Data/full.RData")
save.image("C:/Users/xianl/OneDrive - PennO365/Datasets/MUSA-PPA-HW3-Risk-Model/Data/full.RData")
gc()
gc()
final_net.localMorans <-
cbind(
as.data.frame(localmoran(final_net$count_viol, final_net.weights)),
as.data.frame(final_net)) %>%
st_sf() %>%
dplyr::select(Count_viol = count_viol,
Local_Morans_I = Ii,
P_Value = `Pr(z != E(Ii))`) %>%
mutate(Significant_Hotspots = ifelse(P_Value <= 0.05, 1, 0)) %>%
gather(Variable, Value, -geometry)
)))) %>%drop_na()
))) %>%drop_na()
if_else(question %in% c(8), 'Disgust', NA))))) %>%drop_na()
library(sf)
library(dplyr)
emotions <- st_read("./data/layers/emotions.geojson")
emotions_main <- emotions %>% filter(question %in% c(1:8)) %>%
mutate(sentiment= if_else(question %in% c(1), 'Happy',
if_else(question %in% c(2), 'Proud',
if_else(question %in% c(3,7),'Unhappy',
if_else(question%in%c(4), 'Unsafe',
if_else(question %in% c(5,6), 'Dissatisfied (Transport)'),
if_else(question %in% c(8), 'Disgust', NA)))))) %>%drop_na()
emotions_main %>% st_write("./data/layers/emotions_main.geojson", overwrite=T)
emotions <- st_read("./data/layers/emotions.geojson")
setwd("C:/Users/xianl/OneDrive - PennO365/Datasets/dashboard-project/Feelings-Dash")
emotions <- st_read("./data/layers/emotions.geojson")
emotions_main <- emotions %>% filter(question %in% c(1:8)) %>%
mutate(sentiment= if_else(question %in% c(1), 'Happy',
if_else(question %in% c(2), 'Proud',
if_else(question %in% c(3,7),'Unhappy',
if_else(question%in%c(4), 'Unsafe',
if_else(question %in% c(5,6), 'Dissatisfied (Transport)'),
if_else(question %in% c(8), 'Disgust', NA)))))) %>%drop_na()
library(tidyverse)
emotions_main <- emotions %>% filter(question %in% c(1:8)) %>%
mutate(sentiment= if_else(question %in% c(1), 'Happy',
if_else(question %in% c(2), 'Proud',
if_else(question %in% c(3,7),'Unhappy',
if_else(question%in%c(4), 'Unsafe',
if_else(question %in% c(5,6), 'Dissatisfied (Transport)'),
if_else(question %in% c(8), 'Disgust', NA)))))) %>%drop_na()
emotions_main <- emotions %>% filter(question %in% c(1:8)) %>%
mutate(sentiment= if_else(question %in% c(1), 'Happy',
if_else(question %in% c(2), 'Proud',
if_else(question %in% c(3,7),'Unhappy',
if_else(question%in%c(4), 'Unsafe',
if_else(question %in% c(5,6), 'Dissatisfied (Transport)'),
if_else(question %in% c(8), 'Disgust', NA)))))) %>%drop_na()
if_else(question %in% c(8), 'Disgust', NA))))) %>%drop_na()
if_else(question %in% c(8), 'Disgust', NA)))))
emotions_main <- emotions %>% filter(question %in% c(1:8)) %>%
mutate(sentiment= if_else(question %in% c(1), 'Happy',
if_else(question %in% c(2), 'Proud',
if_else(question %in% c(3,7),'Unhappy',
if_else(question%in%c(4), 'Unsafe',
if_else(question %in% c(5,6), 'Dissatisfied (Transport)'),
if_else(question %in% c(8), 'Disgust', NA))))))
emotions_main <- emotions %>% filter(question %in% c(1:8)) %>%
mutate(sentiment= if_else(question %in% c(1), 'Happy',
if_else(question %in% c(2), 'Proud',
if_else(question %in% c(3,7),'Unhappy',
if_else(question%in%c(4), 'Unsafe',
if_else(question %in% c(5,6), 'Dissatisfied (Transport)'),
if_else(question %in% c(8), 'Disgust', 'Others'))))))
if_else(question %in% c(8), 'Disgust', 'Others'))))) %>% drop_na()
if_else(question %in% c(8), 'Disgust', 'Others')))) %>% drop_na()
emotions_main <- emotions %>% filter(question %in% c(1:8)) %>%
mutate(sentiment= if_else(question %in% c(1), 'Happy',
if_else(question %in% c(2), 'Proud',
if_else(question %in% c(3,7),'Unhappy',
if_else(question%in%c(4), 'Unsafe',
if_else(question %in% c(5,6), 'Dissatisfied (Transport)',
if_else(question %in% c(8), 'Disgust', 'Others'))))))) %>% drop_na()
emotions_main %>% st_write("./data/layers/emotions_main.geojson", overwrite=T)
emotions_main %>% st_write("./data/layers/emotions_main.geojson", overwrite=T)
